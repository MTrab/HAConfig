pack_webasto:
  template:
    - sensor:
        - name: "Webasto Calculated Start"
          state: >
            {%- if now().strftime("%H:%M:00") > states("input_datetime.car_departure_time") %}
              {%- set checkTime = (now() + timedelta(days=1)).strftime("%Y-%m-%d") + " " + states("input_datetime.car_departure_time") %}
            {%- else %}
              {%- set checkTime =  now().strftime("%Y-%m-%d") + " " + states("input_datetime.car_departure_time") %}
            {%- endif %}
            {% set startManual = strptime(((as_timestamp(checkTime, 0) - (states('sensor.calculated_run_time')|int(0)*60) - (20*60)))|timestamp_custom('%Y-%m-%d %H:%M:%S'), '%Y-%m-%d %H:%M:%S') %}
            {% set startAuto = strptime(((as_timestamp(state_attr("calendar.heating","start_time"), 0) - (states('sensor.google_travel_time')|int(0)*60) - (states('sensor.calculated_run_time')|int(0)*60) - (20*60))) | timestamp_custom('%Y-%m-%d %H:%M:%S'), '%Y-%m-%d %H:%M:%S') %}
            {% if states("input_boolean.charge_time_override") == "on" %}
              {% if checkTime < state_attr("calendar.heating","start_time") %}
                {{ startManual }}
              {% else %}
                {{ startAuto }}
              {% endif %}
            {% else %}
              {{ startAuto }}
            {% endif %}

    - sensor:
        - name: "Next Scheduled Appointment"
          state: '{{ state_attr("calendar.heating","start_time") }}'

    - sensor:
        - name: "Calculated run time"
          unit_of_measurement: min
          state: >
            {% if (states('sensor.kia_temperature') | float(0)) < (states('input_number.webasto_low_point') | float(0)) %}
              {% set diff = (states('input_number.webasto_low_point') | float(0)) - (states('sensor.kia_temperature') | float(0)) %}
              {% set runTime = 0.05 * diff | round(1) %}
              {% if runTime < 0.15 %}
                {% set runTime = 0.05 * diff | round(1) %}
              {% endif %}
              {{ ((60 * runTime) | int) }}
            {%else%}
              0
            {%endif%}

  input_datetime:
    webasto_calculated_departure_time:
      name: Webasto Calculated Departure Time
      icon: mdi:send-clock
      has_date: true
      has_time: true

    webasto_next_departure_time:
      name: Webasto Next Departure Time
      icon: mdi:clock-start
      has_date: true
      has_time: true

  input_number:
    webasto_low_point:
      name: Webasto Low Point
      icon: mdi:thermometer-low
      unit_of_measurement: "Â°C"
      min: 0
      max: 30
      step: 1
